////package org.firstinspires.ftc.teamcode;
////
////import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
////import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
////import com.qualcomm.robotcore.hardware.DcMotor;
////import com.qualcomm.robotcore.hardware.Servo;
////import com.shprobotics.pestocore.drivebases.MecanumController;
////import com.shprobotics.pestocore.drivebases.TeleOpController;
////import com.shprobotics.pestocore.drivebases.ThreeWheelOdometryTracker;
////import com.shprobotics.pestocore.geometries.Pose2D;
////import com.shprobotics.pestocore.geometries.Vector2D;
////
////@TeleOp
////public class test extends LinearOpMode {
////
////    @Override
////    public void runOpMode() {
////        MecanumController mecanumController = PestoFTCConfig.getMecanumController(hardwareMap);
////        ThreeWheelOdometryTracker threeWheelOdometryTracker = PestoFTCConfig.getTracker(hardwareMap);
////        ThreeWheelOdometryTracker mecanumTracker = PestoFTCConfig.getTracker(hardwareMap);
////        TeleOpController teleOpController = PestoFTCConfig.getTeleOpController(mecanumController, threeWheelOdometryTracker, hardwareMap);
////
////        DcMotor viperSlide = hardwareMap.get(DcMotor.class, "viperSlide");
////        DcMotor wormGear = hardwareMap.get(DcMotor.class, "wormGear");
////        DcMotor strongArm = hardwareMap.get(DcMotor.class, "strongArm");
////        DcMotor strongArm2 = hardwareMap.get(DcMotor.class, "strongArm2");
////        Servo claw = hardwareMap.get(Servo.class, "Claw");
////        Servo spinner = hardwareMap.get(Servo.class, "Spinner");
////        DcMotor opodL = hardwareMap.get(DcMotor.class, "frontLeft");
////        DcMotor opodC = hardwareMap.get(DcMotor.class, "frontRight");
////        DcMotor opodR = hardwareMap.get(DcMotor.class, "backLeft");
////
////        waitForStart();
////
////        while (opModeIsActive()) {
////            threeWheelOdometryTracker.update();
////            Vector2D currentPosition = threeWheelOdometryTracker.getCurrentPosition().asVector();
////            Pose2D heading = threeWheelOdometryTracker.getCurrentPosition();
////
////            teleOpController.updateSpeed(gamepad1);
////            teleOpController.updateSpeed(gamepad2);
////
////            teleOpController.driveFieldCentric(gamepad1.left_stick_x, gamepad1.right_stick_x, gamepad1.left_stick_y);
////              //1.ROTATE/STRAFE 2.STRAFE/ROTATE 3.FORWARD/BACKWARD
////
////              wormGear.setPower(gamepad1.right_trigger);
////              wormGear.setPower(-gamepad1.left_trigger);
////
//////            viperSlide.setMode(DcMotor.RunMode.RUN_WITHOUT_ENCODER);
//////            viperSlide.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER);
////
////
////            //arm speed constraints
////            if (gamepad1.right_stick_y > 0.5) {
////                viperSlide.setPower(0.5);
////                }
////            //if gamepad1.right_stick_y is between 10% and 50%
////            else if (gamepad1.dpad_up) {
////                viperSlide.setPower(0.5);
////            }
////            else if (gamepad1.dpad_down){
////                viperSlide.setPower(-0.5);
////            }
////
////            if (gamepad1.x) {
////                    claw.setPosition(0.5);
////                }
////            if (gamepad1.y){
////                claw.setPosition(1.0);
////            }
////
////            if (gamepad1.right_stick_y > 0 && gamepad1.right_stick_y < 0.5) {
////            viperSlide.setPower(0.5);
////        }
////        else if (gamepad1.right_stick_y < 0.5) {
////            viperSlide.setPower(1);
////        }
////        else if (gamepad1.right_stick_y < 0 && gamepad1.right_stick_y > -0.5) {
////            viperSlide.setPower(-0.5);
////        }
////        else
////            viperSlide.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.FLOAT);
////
////            if (gamepad2.left_stick_y > 0)
////            strongArm.setPower(gamepad2.left_stick_y);
////        else if (gamepad2.left_stick_y < 0)
////            strongArm.setPower(gamepad2.left_stick_y);
////        else
////            strongArm.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);
////
////            if (gamepad2.right_stick_y > 0)
////            strongArm2.setPower(gamepad2.right_stick_y);
////        else if (gamepad2.right_stick_y < 0)
////            strongArm2.setPower(gamepad2.right_stick_y);
////        else
////            strongArm2.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);
////
////
////            telemetry.addData("x", currentPosition.getX());
////            telemetry.addData("y", currentPosition.getY());
////            telemetry.addData("rotation", heading);
////            telemetry.addData("OPOD L", opodL.getCurrentPosition());
////            telemetry.addData("OPOD C", opodC.getCurrentPosition());
////            telemetry.addData("OPOD R", opodR.getCurrentPosition());
////            telemetry.addData("viperSlide", viperSlide.getCurrentPosition());
////            telemetry.update();
////
////
////            if (gamepad1.b) {
////                threeWheelOdometryTracker.reset();
////                teleOpController.resetIMU();
////            }
////
////            if (gamepad2.x) {
////                strongArm.setTargetPosition(-1104);
////                strongArm2.setTargetPosition(-1104);
////                wormGear.setTargetPosition(908);
////                claw.setPosition(1.0);
////            }
////
////        }
////    }
////}
//
////TRIED TO FIX SECOND TIME
//package org.firstinspires.ftc.teamcode;
//
//import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
//import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
//import com.qualcomm.robotcore.hardware.DcMotor;
//import com.qualcomm.robotcore.hardware.Servo;
//import com.shprobotics.pestocore.drivebases.MecanumController;
//import com.shprobotics.pestocore.drivebases.TeleOpController;
//import com.shprobotics.pestocore.drivebases.ThreeWheelOdometryTracker;
//import com.shprobotics.pestocore.geometries.Pose2D;
//
//@TeleOp
//public class test extends LinearOpMode {
//
//    @Override
//    public void runOpMode() {
//        MecanumController mecanumController = PestoFTCConfig.getMecanumController(hardwareMap);
//        ThreeWheelOdometryTracker threeWheelOdometryTracker = PestoFTCConfig.getTracker(hardwareMap);
//        ThreeWheelOdometryTracker mecanumTracker = PestoFTCConfig.getTracker(hardwareMap);
//        TeleOpController teleOpController = PestoFTCConfig.getTeleOpController(mecanumController, threeWheelOdometryTracker, hardwareMap);
//
//        DcMotor viperslide = hardwareMap.get(DcMotor.class, "viperSlide");
//        DcMotor wormgear = hardwareMap.get(DcMotor.class, "wormGear");
//        Servo claw = hardwareMap.get(Servo.class, "Claw");
////        DcMotor opodL = hardwareMap.get(DcMotor.class, "frontLeft");
////        DcMotor opodC = hardwareMap.get(DcMotor.class, "frontRight");
////        DcMotor opodR = hardwareMap.get(DcMotor.class, "backLeft");
//
//        waitForStart();
//
//        while (opModeIsActive()) {
//            threeWheelOdometryTracker.update();
//            Pose2D currentPosition = threeWheelOdometryTracker.getCurrentPosition();
////            threeWheelOdometryTracker.getCurrentHeading();
//
//            teleOpController.updateSpeed(gamepad1);
//
//            teleOpController.driveFieldCentric(gamepad1.left_stick_x, gamepad1.right_stick_x, gamepad1.left_stick_y);
//
//            wormgear.setPower(gamepad1.right_trigger);
//            wormgear.setPower(-gamepad1.left_trigger);
//
//            if (gamepad1.right_stick_y > 0.5) {
//                viperslide.setTargetPosition(50);
//                viperslide.setPower(0.5);
//            } else if (gamepad1.right_stick_y < 0) {
//                viperslide.setPower(-0.5);
//            } else if (viperslide.getCurrentPosition() > 2 && viperslide.getCurrentPosition() < 4) {
//                viperslide.setPower(0);
//                viperslide.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);
//            } else viperslide.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.FLOAT);
//
//
//                if (gamepad1.x) {
//                    claw.setPosition(0.5);
//                }
//                if (gamepad1.y) {
//                    claw.setPosition(1);
//                }
//
////            telemetry.addData("x", currentPosition.getX());
////            telemetry.addData("y", currentPosition.getY());
////            telemetry.addData("rotation", heading);
////            telemetry.addData("OPOD L", opodL.getCurrentPosition());
////            telemetry.addData("OPOD C", opodC.getCurrentPosition());
////            telemetry.addData("OPOD R", opodR.getCurrentPosition());
//                telemetry.addData("ViperSlide: ", viperslide.getCurrentPosition());
//                telemetry.update();
//
//
//                if (gamepad1.b) {
////                threeWheelOdometryTracker.reset();
//                    teleOpController.resetIMU();
//                }
//            }
//        }
//    }
